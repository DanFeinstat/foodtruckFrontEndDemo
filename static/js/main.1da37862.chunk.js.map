{"version":3,"sources":["components/truckDetails/TruckDetailsCard.module.css","components/header/Header.module.css","assets/images/foodMapMarker.png","components/truckDetails/DetailsShelf.module.css","assets/images/HambreLogo.png","logo.svg","components/store/store.js","components/map/Map.js","components/truckDetails/TruckDetailsCard.js","components/truckDetails/DetailsShelf.js","components/header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","container","title","blurb","logo","menu","__webpack_require__","p","initialState","trucks","name","latitude","longitude","trucksToDisplay","reducer","state","action","type","newTrucks","Object","toConsumableArray","push","payload","objectSpread","currentTrucks","newDisplay","map","truck","latTest","latRange","lngTest","lngRange","sort","AppContext","React","createContext","AppContextProvider","props","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","value","children","Mapbox","ReactMapboxGl","accessToken","Map","_ref","menuActive","_useContext","useContext","_useState","useState","_useState2","_useState3","_useState4","popupInfo","setPopupInfo","_useState5","_useState6","popupValue","setPopupValue","_useState7","_useState8","mapCenter","setMapCenter","_useState9","document","documentElement","clientHeight","_useState10","viewHeight","setViewHeight","_useState11","_useState12","mapHeight","setMapHeight","getCurrentPosition","options","arguments","length","undefined","Promise","resolve","reject","navigator","geolocation","getCenterPosition","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref3","coords","wrap","_context","prev","next","sent","t0","console","error","stop","apply","this","useEffect","handleResize","window","addEventListener","removeEventListener","style","minZoom","maxZoom","center","onStyleLoad","rawBounds","getBounds","onLoadBounds","_ne","lat","_sw","lng","onClick","containerStyle","height","concat","width","onDragEnd","onZoomEnd","lib_esm","id","layout","icon-image","index","truckData","key","toString","coordinates","dataCoordinates","_ref4","feature","geometry","data","foodMarker","className","styles","popup","TruckDetailsCard","truckName","truckBlurb","DetailsShelf","truckDetails_TruckDetailsCard","Header","setMenuActive","src","alt","App","store_AppContextProvider","header_Header","map_Map","truckDetails_DetailsShelf","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1da37862.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TruckDetailsCard_container__VnGfD\",\"title\":\"TruckDetailsCard_title__3HWS0\",\"blurb\":\"TruckDetailsCard_blurb__zCP28\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__27QFJ\",\"logo\":\"Header_logo__3EvUy\",\"menu\":\"Header_menu__2fg7G\"};","module.exports = __webpack_public_path__ + \"static/media/foodMapMarker.daf07576.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DetailsShelf_container__3f8Av\"};","module.exports = __webpack_public_path__ + \"static/media/HambreLogo.e4ecf5ea.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useReducer } from \"react\";\n\nconst initialState = {\n  trucks: [\n    {\n      name: `Identity Coffee`,\n      latitude: 38.568587,\n      longitude: -121.471795,\n      blurb: `Best iced latte in Sacramento.`,\n    },\n    {\n      name: `Sutter's Fort`,\n      latitude: 38.5723654,\n      longitude: -121.4712114,\n      blurb: `It's a fort!`,\n    },\n    {\n      name: `Temple Coffee`,\n      latitude: 38.5739618,\n      longitude: -121.4010712,\n      blurb: `The best way to pray.`,\n    },\n    {\n      name: `Curry Up Now`,\n      latitude: 37.762289,\n      longitude: -122.421454,\n      blurb: `Indian street food in a hurry!`,\n    },\n    {\n      name: `Easy Slider`,\n      latitude: 37.787596,\n      longitude: -122.39663,\n      blurb: `Slinging sliders to order.`,\n    },\n    {\n      name: `Grillenium Falcon`,\n      latitude: 37.7897001,\n      longitude: -122.4035692,\n      blurb: `It made a grilled cheese in 14 parsecs!`,\n    },\n    {\n      name: `Hamborghini`,\n      latitude: 37.801151,\n      longitude: -122.407572,\n      blurb: `Serving up hocky-style specialties such as the Bobby Orr tuna melt.`,\n    },\n    {\n      name: `Guac N Roll`,\n      latitude: 37.8031337,\n      longitude: -122.4201193,\n      blurb: `Spicy food and spicy tunes.`,\n    },\n    {\n      name: `Mamas and Tapas`,\n      latitude: 38.578809,\n      longitude: -121.493758,\n      blurb: `Family run small plates.`,\n    },\n    {\n      name: `Ms. Cheesious`,\n      latitude: 37.7763685,\n      longitude: -122.4241893,\n      blurb: `Creative grilled cheese sandwiches.`,\n    },\n  ],\n  trucksToDisplay: [],\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case `addTruck`:\n      const newTrucks = [...state.trucks];\n      newTrucks.push(action.payload);\n      return { ...state, trucks: newTrucks };\n    case `newMapBounds`:\n      const currentTrucks = [...state.trucks];\n      const newDisplay = [];\n      currentTrucks.map(truck => {\n        let latTest = [...action.payload.latRange];\n        let lngTest = [...action.payload.lngRange];\n        latTest.push(truck.latitude);\n        latTest.sort();\n        lngTest.push(truck.longitude);\n        lngTest.sort();\n        if (latTest[1] === truck.latitude && lngTest[1] === truck.longitude) {\n          newDisplay.push(truck);\n        }\n      });\n      return { ...state, trucksToDisplay: newDisplay };\n    default:\n      return state;\n  }\n}\n\nconst AppContext = React.createContext(initialState);\n\nconst AppContextProvider = props => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <AppContext.Provider\n      value={{\n        state,\n        dispatch,\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport { AppContext, AppContextProvider };\n","import React, { useState, useEffect, useContext } from \"react\";\nimport ReactMapboxGl, {\n  Layer,\n  Feature,\n  Popup,\n  MapContext,\n  Image,\n} from \"react-mapbox-gl\";\nimport styles from \"./Map.module.css\";\nimport foodMarker from \"../../assets/images/foodMapMarker.png\";\nimport { AppContext } from \"../store/store\";\n// import { callbackify } from \"util\";\n\n//default public token\nconst token = `pk.eyJ1IjoiZGFuZmVpbnN0YXQiLCJhIjoiY2p3ZTVhMnduMHIxZjN6b3UzdXNtNDBwMCJ9.IcWOA5mFg_ZIpLsoXu_e_g`;\nconst Mapbox = ReactMapboxGl({ accessToken: token });\n\nconst Map = ({ menuActive }) => {\n  const { state, dispatch } = useContext(AppContext);\n  const [mapBounds, setMapBounds] = useState({});\n  const [popupInfo, setPopupInfo] = useState();\n  const [popupValue, setPopupValue] = useState();\n  const [mapCenter, setMapCenter] = useState([-121.4944, 38.5816]);\n  const [viewHeight, setViewHeight] = useState(\n    document.documentElement.clientHeight\n  );\n  const [mapHeight, setMapHeight] = useState(\n    document.documentElement.clientHeight - 56\n  );\n\n  function getCurrentPosition(options = {}) {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject, options);\n    });\n  }\n  const getCenterPosition = async () => {\n    try {\n      const { coords } = await getCurrentPosition();\n      const { latitude, longitude } = coords;\n      setMapCenter([longitude, latitude]);\n\n      // Handle coordinates\n    } catch (error) {\n      // Handle error\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getCenterPosition();\n  }, []);\n\n  useEffect(() => {\n    if (viewHeight !== mapHeight + 56) {\n      const newMapHeight = viewHeight - 56;\n      setMapHeight(newMapHeight);\n    }\n    const handleResize = () => {\n      setViewHeight(document.documentElement.clientHeight);\n    };\n    window.addEventListener(`resize`, handleResize);\n    return () => {\n      window.removeEventListener(`resize`, handleResize);\n    };\n  }, [viewHeight, mapHeight]);\n\n  useEffect(() => {\n    const newMapHeight = viewHeight - 56;\n    setMapHeight(newMapHeight);\n  }, [viewHeight]);\n  return (\n    <Mapbox\n      style=\"mapbox://styles/mapbox/streets-v8\"\n      minZoom={4}\n      maxZoom={15}\n      center={mapCenter}\n      onStyleLoad={map => {\n        let rawBounds = map.getBounds();\n        let onLoadBounds = {\n          latRange: [rawBounds._ne.lat, rawBounds._sw.lat],\n          lngRange: [rawBounds._ne.lng, rawBounds._sw.lng],\n        };\n        // console.log(onLoadBounds);\n        dispatch({\n          type: `newMapBounds`,\n          payload: onLoadBounds,\n        });\n        // setMapBounds(map.getBounds());\n        // console.log(map.getBounds());\n      }}\n      onClick={() => {\n        setPopupInfo();\n      }}\n      containerStyle={{\n        height: `${mapHeight}px`,\n        width: `${menuActive ? `calc(100% - 160px)` : `100%`}`,\n      }}\n      onDragEnd={map => {\n        let rawBounds = map.getBounds();\n        let onLoadBounds = {\n          latRange: [rawBounds._ne.lat, rawBounds._sw.lat],\n          lngRange: [rawBounds._ne.lng, rawBounds._sw.lng],\n        };\n        // console.log(onLoadBounds);\n        dispatch({\n          type: `newMapBounds`,\n          payload: onLoadBounds,\n        });\n        // setMapBounds(map.getBounds());\n        // console.log(map.getBounds());\n      }}\n      onZoomEnd={map => {\n        let rawBounds = map.getBounds();\n        let onLoadBounds = {\n          latRange: [rawBounds._ne.lat, rawBounds._sw.lat],\n          lngRange: [rawBounds._ne.lng, rawBounds._sw.lng],\n        };\n        // console.log(onLoadBounds);\n        dispatch({\n          type: `newMapBounds`,\n          payload: onLoadBounds,\n        });\n        // setMapBounds(map.getBounds());\n        // console.log(map.getBounds());\n      }}\n    >\n      >\n      <Layer\n        type=\"symbol\"\n        id=\"marker\"\n        layout={{ \"icon-image\": \"restaurant-15\" }}\n      >\n        {state.trucksToDisplay.map((truck, index) => {\n          let truckData = { name: truck.name, blurb: truck.blurb };\n          return (\n            <Feature\n              key={index.toString()}\n              coordinates={[truck.longitude, truck.latitude]}\n              dataCoordinates={[truck.longitude, truck.latitude]}\n              onClick={({ feature }) => {\n                // console.log(feature.geometry.coordinates);\n                setPopupValue(truckData);\n                setPopupInfo(feature.geometry.coordinates);\n                setMapCenter(feature.geometry.coordinates);\n              }}\n            >\n              <Image id={\"image-foodMarker\"} data={foodMarker} />\n            </Feature>\n          );\n        })}\n      </Layer>\n      {popupInfo && (\n        <Popup coordinates={popupInfo}>\n          <div className={styles.popup}>\n            <div>\n              <h3>{popupValue.name}</h3>\n              <div>{popupValue.blurb}</div>\n            </div>\n          </div>\n        </Popup>\n      )}\n    </Mapbox>\n  );\n};\n\nexport default Map;\n","import React from \"react\";\nimport styles from \"./TruckDetailsCard.module.css\";\n\nconst TruckDetailsCard = ({ truckName, truckBlurb }) => {\n  return (\n    <div className={styles.container}>\n      <h3 className={styles.title}>{truckName}</h3>\n      <p className={styles.blurb}>{truckBlurb}</p>\n    </div>\n  );\n};\n\nexport default TruckDetailsCard;\n","import React, { useContext, useState } from \"react\";\nimport styles from \"./DetailsShelf.module.css\";\nimport TruckDetailsCard from \"./TruckDetailsCard\";\nimport { AppContext } from \"../store/store\";\n\nconst DetailsShelf = () => {\n  const { state, dispatch } = useContext(AppContext);\n  //   const [toDisplay, setToDisplay] = useState(state.trucksToDisplay);\n\n  return (\n    <div className={styles.container}>\n      {state.trucksToDisplay.map((truck, index) => {\n        return (\n          <TruckDetailsCard\n            key={index.toString()}\n            truckName={truck.name}\n            truckBlurb={truck.blurb}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DetailsShelf;\n","import React from \"react\";\nimport styles from \"./Header.module.css\";\nimport logo from \"../../assets/images/HambreLogo.png\";\n\nconst Header = ({ children, menuActive, setMenuActive }) => {\n  return (\n    <header className={styles.container}>\n      <img src={logo} className={styles.logo} alt={`Logo`} />\n      {children}\n      <button\n        className={styles.menu}\n        onClick={() => {\n          setMenuActive(!menuActive);\n        }}\n      >\n        {menuActive === false ? `Show Details` : `Hide Details`}\n      </button>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport Map from \"./components/map/Map\";\nimport DetailsShelf from \"./components/truckDetails/DetailsShelf\";\nimport Header from \"./components/header/Header\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { AppContextProvider } from \"./components/store/store\";\n\nfunction App() {\n  const [menuActive, setMenuActive] = useState(false);\n  return (\n    <div className=\"App\">\n      <AppContextProvider>\n        <Header menuActive={menuActive} setMenuActive={setMenuActive} />\n        {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p> */}\n        <Map menuActive={menuActive} /> {menuActive ? <DetailsShelf /> : null}\n        {/* <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      </AppContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}